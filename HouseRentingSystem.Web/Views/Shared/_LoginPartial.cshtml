@using Microsoft.AspNetCore.Identity
@using HouseRentingSystem.Services.Interfaces
@using HouseRentingSystem.Web.Infrastructure.Extensions

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@inject IAgentService AgentService;
@{
    bool isUserAgent = await AgentService.AgentExistsByUserIdAsync(this.User.GetId());
    string firstName = string.Empty;
    string lastName = string.Empty;
    if (User.Identity.IsAuthenticated)
    {
        firstName = User.FindFirst("FirstName")?.Value ?? TempData["FirstName"]?.ToString() ?? string.Empty;
        lastName = User.FindFirst("LastName")?.Value ?? TempData["LastName"]?.ToString() ?? string.Empty;
    }
}


<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @firstName @lastName!</a>
        </li>
        @if (!isUserAgent && !User.IsUserAdmin())
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Agent" asp-action="Become">Become Agent</a>
            </li>
        }
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
